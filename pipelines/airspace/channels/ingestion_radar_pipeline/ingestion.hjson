{
  version: "6.0"
  tenant: demo
  channel: tracks
  runtime: storm
  dag: [
    {
        description:
        '''
        Consumme data from a kafka topic
        '''  
        type :"kafka_input",
        settings : {
          brokers : "local",
          topic : "radar-report",
          start_offset_strategy : "last_committed",
            value_codec: {
                type: "string"
            }       
        }
      "publish" : [ 
        { 
            stream : "logs", 
            fields : ["log"] 
        } 
      ]     
    }
    {
      description:
      '''
      Simply print out the input dsta to stdout
      '''
      type: punchlet_node
      settings: {
        punchlet_code: "{[logs][log][@timestamp] = [logs][log][event_timestamp]; date(\"yyyy.MM.dd\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\").on([logs][log][@timestamp]).into([tmp][date]); [logs][es_index] = [logs][log][fields][type]+\"-\"+[tmp][date];}"
      }
      executors: 2
      subscribe: [
          {
            component: kafka_input
            stream: logs
          }
      ]
      "publish" : [ 
        { 
            stream : "logs", 
            fields : ["log", "es_index"] 
        } 
      ]        
    }
    {
      "type": "elasticsearch_output",
      "settings": {
        "cluster_id": "es_search",
        "per_stream_settings" : [
          {
            "stream" : "logs",
            "index" : { "type" : "tuple_field", "tuple_field" : "es_index" }
            "document_json_field" : "log",
            "additional_document_value_fields" : [
              { "type" : "date" , "document_field" : "ts", "format" : "iso"}
            ]
          }    
        ]
      }
      subscribe: [
          {
            component: punchlet_node
            stream: logs
          }
      ]      
    }
  ]
  settings : {
    topology.worker.childopts: "-Xms2048m -Xmx2048m",
    topology.max.spout.pending : 50000,
    topology.enable.message.timeouts: true,
    topology.message.timeout.secs: 30,
    topology.receiver.buffer.size: 32,
    topology.workers: 1
  }
}
